{
    "version": 3,
    "sources": [
        "../../../src/ueditor/controller/index.js"
    ],
    "names": [
        "fs",
        "require",
        "path",
        "moment",
        "Base",
        "rename",
        "think",
        "promisify",
        "writeFile",
        "ueditorConfig",
        "UPLOAD_BASE_PATH",
        "join",
        "ROOT_PATH",
        "UPLOAD_BASE_URL",
        "module",
        "exports",
        "indexAction",
        "action",
        "get",
        "json",
        "file",
        "imageFieldName",
        "exts",
        "imageAllowFiles",
        "fileExt",
        "extname",
        "name",
        "indexOf",
        "maxSize",
        "imageMaxSize",
        "size",
        "fileName",
        "format",
        "parseInt",
        "Math",
        "random",
        "filePath",
        "mkdir",
        "dirname",
        "state",
        "url",
        "title",
        "original",
        "data",
        "post",
        "scrawlFieldName",
        "buf",
        "Buffer",
        "scrawlMaxSize",
        "length"
    ],
    "mappings": "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",
    "file": "../../../src/ueditor/controller/index.js",
    "sourcesContent": [
        "const fs = require('fs');\nconst path = require('path');\nconst moment = require('moment');\nconst Base = require('./base.js');\nconst rename = think.promisify(fs.rename, fs);\nconst writeFile = think.promisify(fs.writeFile,fs);\n\nconst ueditorConfig = require('../config/ueditor.config.js');//\nconst UPLOAD_BASE_PATH = path.join(think.ROOT_PATH,'www/static/upload');\nconst UPLOAD_BASE_URL = '/static/upload/';\n\nmodule.exports = class extends Base {\n  async indexAction() {\n    let action = this.get('action');\n    if(action==='config'){\n      this.json(ueditorConfig);\n    }else if(action==='uploadimage'){\n      const file = this.file(ueditorConfig.imageFieldName);\n      if(file){\n        const exts = ueditorConfig.imageAllowFiles;\n        const fileExt = path.extname(file.name);\n        if(exts.indexOf(fileExt)>=0){\n          const maxSize = ueditorConfig.imageMaxSize;\n          if(file.size<=maxSize){\n              const fileName = moment().format('YYYYMMDDHHmmssx') + parseInt(Math.random()*100000000000000000) + fileExt;\n              const filePath = path.join(UPLOAD_BASE_PATH,'images/'+fileName);\n              think.mkdir(path.dirname(filePath));\n              await rename(file.path, filePath);\n              this.json({\n                state:'SUCCESS',\n                url:UPLOAD_BASE_URL+'images/'+fileName,\n                title:fileName,\n                original:file.name,\n                size:file.size\n              })\n          }else{\n            this.json({state:'文件太大，最大不能超过：'+maxSize/1024+'KB'});\n          }\n        }else{\n          this.json({state:'文件格式错误，允许上传的格式有：'+exts.join('|')})\n        }\n      }else{\n        this.json({state:'文件不存在'});\n      }\n    }else if(action==='uploadscrawl'){\n      let data = this.post(ueditorConfig.scrawlFieldName);\n      let buf = new Buffer(data,'base64');\n      let maxSize = ueditorConfig.scrawlMaxSize;\n      if(buf.length<=maxSize){\n        const fileName = moment().format('YYYYMMDDHHmmssx') + parseInt(Math.random()*100000000000000000) + '.png';\n        const filePath = path.join(UPLOAD_BASE_PATH,'images/'+fileName);\n        await writeFile(filePath,buf);\n        this.json({\n          state:'SUCCESS',\n          url:UPLOAD_BASE_URL+'images/'+fileName,\n          title:fileName,\n          original:fileName,\n          size:buf.length\n        });\n      }else{\n        this.json({state:'文件太大，最大不能超过：'+maxSize/1024+'KB'});\n      }\n    }else{\n      this.json({});\n    }\n  }\n};\n"
    ]
}